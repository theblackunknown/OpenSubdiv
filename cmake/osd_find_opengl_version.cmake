function(osd_find_opengl_version output_variable)
    if (GLEW_FOUND AND NOT NO_GLEW)
        get_target_property(include_directories GLEW::GLEW INTERFACE_INCLUDE_DIRECTORIES)
        cmake_path(SET header_relative_path "GL/glew.h")
    elseif (OPENGL_FOUND AND NOT NO_OPENGL)
        # get_target_property(include_directories OpenGL::GL INTERFACE_INCLUDE_DIRECTORIES)
        # cmake_path(SET header_relative_path "GL/gl.h")
        set(include_directories "${OpenSubDiv_SOURCE_DIR}")
        cmake_path(SET header_relative_path "glLoader/glApi.h")
    else()
        return()
    endif()
    foreach(include_directory IN LISTS include_directories)
        cmake_path(SET header_path "${include_directory}/${header_relative_path}")
        if (EXISTS "${header_path}")
            file(STRINGS "${header_path}" OpenGL_Versions REGEX "^#define GL_VERSION_[0-9]_[0-9](_[0-9])? 1$")
            list(TRANSFORM OpenGL_Versions REPLACE "^#define GL_VERSION_([0-9]_[0-9](_[0-9])?) 1$" "\\1")
            list(TRANSFORM OpenGL_Versions REPLACE "_" ".")
            list(SORT OpenGL_Versions COMPARE NATURAL ORDER DESCENDING)

            list(LENGTH OpenGL_Versions OpenGL_Versions_length)
            if(OpenGL_Versions_length EQUAL 0)
                continue()
            endif()

            list(GET OpenGL_Versions 0 OpenGL_Version)

            set(${output_variable} ${OpenGL_Version} PARENT_SCOPE)
        endif ()
    endforeach()
endfunction()
